
// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Generates an animation scenario (script) in Turkish based on a given text summary.
 *
 * - generateAnimationScenario - A function that generates the animation scenario in Turkish.
 * - GenerateAnimationScenarioInput - The input type for the generateAnimationScenario function.
 * - GenerateAnimationScenarioOutput - The return type for the generateAnimationScenario function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateAnimationScenarioInputSchema = z.object({
  pdfSummary: z
    .string()
    .describe('A summary of the PDF content (in Turkish) to generate the animation scenario from.'),
});

export type GenerateAnimationScenarioInput = z.infer<
  typeof GenerateAnimationScenarioInputSchema
>;

const GenerateAnimationScenarioOutputSchema = z.object({
  animationScenario: z
    .string()
    .describe('The generated animation scenario (script) IN TURKISH, with scenes separated by double newlines.'),
});

export type GenerateAnimationScenarioOutput = z.infer<
  typeof GenerateAnimationScenarioOutputSchema
>;

export async function generateAnimationScenario(
  input: GenerateAnimationScenarioInput
): Promise<GenerateAnimationScenarioOutput> {
  return generateAnimationScenarioFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateAnimationScenarioPrompt',
  input: {schema: GenerateAnimationScenarioInputSchema},
  output: {schema: GenerateAnimationScenarioOutputSchema},
  prompt: `You are an expert scenario writer for animated videos. Your task is to create a detailed script for an animation IN TURKISH based on the provided PDF summary (which is also in Turkish).
The script should be divided into distinct scenes or frames. Each scene description should be a paragraph in Turkish, providing enough detail for an animator to visualize and create the scene. This includes visual elements, character actions (if any), and key messages or narration for that scene.

**IMPORTANT FORMATTING INSTRUCTION: Separate each scene description from the next using exactly two newline characters (i.e., a blank line between scenes).**

Example of the required format (in Turkish):

Sahne 1: [İlk sahne için görsel öğelerin, eylemlerin ve anlatımın ayrıntılı açıklaması. Örneğin, "Kalabalık bir şehir caddesinin geniş açılı çekimi. Arabalar hareket ediyor, insanlar yürüyor. Anlatıcı: 'Dünya sürekli değişiyor...'"]

Sahne 2: [İkinci sahne için ayrıntılı açıklama. Örneğin, "Bir mikroskoba bakan bir bilim insanının yakın çekimi. Bilim İnsanı (V.O.): 'Ve bu değişimin merkezinde yenilik var.'"]

Sahne 3: [Üçüncü sahne için ayrıntılı açıklama.]

Now, based on the following summary (in Turkish), generate the animation scenario IN TURKISH:

Summary (Özet):
{{{pdfSummary}}}

Animation Scenario (Animasyon Senaryosu - follow the formatting instructions precisely and ensure output is in Turkish):
`,
});

const generateAnimationScenarioFlow = ai.defineFlow(
  {
    name: 'generateAnimationScenarioFlow',
    inputSchema: GenerateAnimationScenarioInputSchema,
    outputSchema: GenerateAnimationScenarioOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
