// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Generates an animation scenario (script) based on a given text summary.
 *
 * - generateAnimationScenario - A function that generates the animation scenario.
 * - GenerateAnimationScenarioInput - The input type for the generateAnimationScenario function.
 * - GenerateAnimationScenarioOutput - The return type for the generateAnimationScenario function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateAnimationScenarioInputSchema = z.object({
  pdfSummary: z
    .string()
    .describe('A summary of the PDF content to generate the animation scenario from.'),
});

export type GenerateAnimationScenarioInput = z.infer<
  typeof GenerateAnimationScenarioInputSchema
>;

const GenerateAnimationScenarioOutputSchema = z.object({
  animationScenario: z
    .string()
    .describe('The generated animation scenario (script).'),
});

export type GenerateAnimationScenarioOutput = z.infer<
  typeof GenerateAnimationScenarioOutputSchema
>;

export async function generateAnimationScenario(
  input: GenerateAnimationScenarioInput
): Promise<GenerateAnimationScenarioOutput> {
  return generateAnimationScenarioFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateAnimationScenarioPrompt',
  input: {schema: GenerateAnimationScenarioInputSchema},
  output: {schema: GenerateAnimationScenarioOutputSchema},
  prompt: `You are an expert scenario writer for animated videos. Based on the summary of a PDF document, generate an animation scenario (script) that can be used to create an animated video.

Summary: {{{pdfSummary}}}

Animation Scenario: `,
});

const generateAnimationScenarioFlow = ai.defineFlow(
  {
    name: 'generateAnimationScenarioFlow',
    inputSchema: GenerateAnimationScenarioInputSchema,
    outputSchema: GenerateAnimationScenarioOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
