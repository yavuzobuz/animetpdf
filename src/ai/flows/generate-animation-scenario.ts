
// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Generates an animation scenario (script) based on a given text summary.
 *
 * - generateAnimationScenario - A function that generates the animation scenario.
 * - GenerateAnimationScenarioInput - The input type for the generateAnimationScenario function.
 * - GenerateAnimationScenarioOutput - The return type for the generateAnimationScenario function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateAnimationScenarioInputSchema = z.object({
  pdfSummary: z
    .string()
    .describe('A summary of the PDF content to generate the animation scenario from.'),
});

export type GenerateAnimationScenarioInput = z.infer<
  typeof GenerateAnimationScenarioInputSchema
>;

const GenerateAnimationScenarioOutputSchema = z.object({
  animationScenario: z
    .string()
    .describe('The generated animation scenario (script), with scenes separated by double newlines.'),
});

export type GenerateAnimationScenarioOutput = z.infer<
  typeof GenerateAnimationScenarioOutputSchema
>;

export async function generateAnimationScenario(
  input: GenerateAnimationScenarioInput
): Promise<GenerateAnimationScenarioOutput> {
  return generateAnimationScenarioFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateAnimationScenarioPrompt',
  input: {schema: GenerateAnimationScenarioInputSchema},
  output: {schema: GenerateAnimationScenarioOutputSchema},
  prompt: `You are an expert scenario writer for animated videos. Your task is to create a detailed script for an animation based on the provided PDF summary.
The script should be divided into distinct scenes or frames. Each scene description should be a paragraph, providing enough detail for an animator to visualize and create the scene. This includes visual elements, character actions (if any), and key messages or narration for that scene.

**IMPORTANT FORMATTING INSTRUCTION: Separate each scene description from the next using exactly two newline characters (i.e., a blank line between scenes).**

Example of the required format:

Scene 1: [Detailed description of visual elements, actions, and narration for the first scene. e.g., "A wide shot of a bustling city street. Cars are moving, people are walking. Narrator: 'The world is constantly changing...'"]

Scene 2: [Detailed description for the second scene. e.g., "Close up on a scientist looking into a microscope. Scientist (V.O.): 'And at the heart of this change is innovation.'"]

Scene 3: [Detailed description for the third scene.]

Now, based on the following summary, generate the animation scenario:

Summary:
{{{pdfSummary}}}

Animation Scenario (follow the formatting instructions precisely):
`,
});

const generateAnimationScenarioFlow = ai.defineFlow(
  {
    name: 'generateAnimationScenarioFlow',
    inputSchema: GenerateAnimationScenarioInputSchema,
    outputSchema: GenerateAnimationScenarioOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);

